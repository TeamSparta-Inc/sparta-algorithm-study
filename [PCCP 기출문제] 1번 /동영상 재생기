
public class Solution {
    public String solution(String video_len, String pos, String op_start, String op_end, String[] commands) {
        // 시간 문자열을 초 단위로 변환
        int videoLenSeconds = convertToSeconds(video_len);
        int currentPosition = convertToSeconds(pos);
        int opStartSeconds = convertToSeconds(op_start);
        int opEndSeconds = convertToSeconds(op_end);
        
        // 시작 위치가 오프닝 구간에 있는지 먼저 확인
        if (currentPosition >= opStartSeconds && currentPosition <= opEndSeconds) {
            currentPosition = opEndSeconds;
        }
        
        // 각 명령 처리
        for (String command : commands) {
            if (command.equals("prev")) {
                // 10초 전으로 이동, 10초 미만이면 처음으로
                currentPosition = Math.max(0, currentPosition - 10);
            } else if (command.equals("next")) {
                // 10초 후로 이동, 남은 시간이 10초 미만이면 끝으로
                currentPosition = Math.min(videoLenSeconds, currentPosition + 10);
            }
            
            // 명령 후 위치가 오프닝 구간에 있는지 확인
            if (currentPosition >= opStartSeconds && currentPosition <= opEndSeconds) {
                currentPosition = opEndSeconds;
            }
        }
        
        // 결과를 mm:ss 형식으로 변환하여 반환
        return convertToTimeFormat(currentPosition);
    }
    
    // "mm:ss" 형식의 시간을 초 단위로 변환
    private int convertToSeconds(String timeStr) {
        String[] parts = timeStr.split(":");
        int minutes = Integer.parseInt(parts[0]);
        int seconds = Integer.parseInt(parts[1]);
        return minutes * 60 + seconds;
    }
    
    // 초 단위의 시간을 "mm:ss" 형식으로 변환
    private String convertToTimeFormat(int totalSeconds) {
        int minutes = totalSeconds / 60;
        int seconds = totalSeconds % 60;
        return String.format("%02d:%02d", minutes, seconds);
    }
}
